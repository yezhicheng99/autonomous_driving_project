<launch>

    <!-- image ground projection -->
    <rosparam command="load" file="$(find myhamster_challenge)/calibration/projection.yaml" />
    <node pkg="myhamster_challenge" type="image_projection" name="image_projection" output="screen">
        <param name="/is_extrinsic_camera_calibration_mode" value="True"/>
        <remap from="/camera/image_input" to="/camera/color/image_raw" />
        <remap from="/camera/image_input/compressed" to="/camera/color/image_raw/compressed" />
        <remap from="/camera/image_output" to="/camera/image_projected" />
        <remap from="/camera/image_output/compressed" to="/camera/image_projected/compressed" />
        <remap from="/camera/image_calib" to="/camera/image_extrinsic_calib" />
        <remap from="/camera/image_calib/compressed" to="/camera/image_extrinsic_calib/compressed" />
    </node>

    <!-- image brightness & contrast compensation of ground-projected image -->
    <rosparam command="load" file="$(find myhamster_challenge)/calibration/compensation.yaml" />
    <node pkg="myhamster_challenge" type="image_compensation" name="image_compensation_projection" output="screen">
        <param name="/is_extrinsic_camera_calibration_mode" value="True"/>
        <remap from="/camera/image_input" to="/camera/image_projected" />
        <remap from="/camera/image_input/compressed" to="/camera/image_projected/compressed" />
        <remap from="/camera/image_output" to="/camera/image_projected_compensated" />
        <remap from="/camera/image_output/compressed" to="/camera/image_projected_compensated/compressed" />
    </node>
   
    <!-- lane detection -->
    <rosparam command="load" file="$(find myhamster_challenge)/calibration/lane.yaml" />
    <node pkg="myhamster_challenge" type="detect_lane" name="detect_lane" output="screen">
        <param name="/is_detection_calibration_mode" value="True"/>
        <remap from="/detect/image_input" to="/camera/image_projected_compensated" />
        <remap from="/detect/image_input/compressed" to="/camera/image_projected_compensated/compressed" />
        <remap from="/detect/image_output" to="/detect/image_lane" />
        <remap from="/detect/image_output/compressed" to="/detect/image_lane/compressed" />
        <remap from="/detect/image_output_sub1" to="/detect/image_white_lane_marker" />
        <remap from="/detect/image_output_sub1/compressed" to="/detect/image_white_lane_marker/compressed" />
        <remap from="/detect/image_output_sub2" to="/detect/image_yellow_lane_marker" />
        <remap from="/detect/image_output_sub2/compressed" to="/detect/image_yellow_lane_marker/compressed" />    
    </node>

</launch>
